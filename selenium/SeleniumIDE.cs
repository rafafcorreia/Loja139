// namespace = workspace = grupo de classes = pacote
namespace Loja139;
// Generated by Selenium IDE
// Pacotes = Dependências = Bibliotecas
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;

using WebDriverManager;
using WebDriverManager.DriverConfigs.Impl;

[TestFixture] // Configuração do Teste
// Esta é a Classe
public class SelecionarProdutoTest {

  // Atributos = Características = Campos
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;

  // Funções e Métodos
  [SetUp]
  public void SetUp() {
    new DriverManager().SetUpDriver(new ChromeConfig()); // Configuração do WebDriverManager
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
    driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMilliseconds(10000);
    driver.Manage().Window.Maximize();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void selecionarproduto() {
    driver.Navigate().GoToUrl("https://www.saucedemo.com/");
    // driver.Manage().Window.Size = new System.Drawing.Size(741, 697);
    driver.FindElement(By.CssSelector("*[data-test=\"username\"]")).Click();
    driver.FindElement(By.CssSelector("*[data-test=\"username\"]")).SendKeys("standard_user");
    driver.FindElement(By.CssSelector("*[data-test=\"password\"]")).Click();
    driver.FindElement(By.CssSelector("*[data-test=\"password\"]")).SendKeys("secret_sauce");
    driver.FindElement(By.CssSelector("*[data-test=\"login-button\"]")).Click();
    Assert.That(driver.FindElement(By.CssSelector(".title")).Text, Is.EqualTo("Products"));
    Assert.That(driver.FindElement(By.CssSelector("#item_4_title_link > .inventory_item_name")).Text, Is.EqualTo("Sauce Labs Backpack"));
    driver.FindElement(By.CssSelector("#item_4_title_link > .inventory_item_name")).Click();
    Assert.That(driver.FindElement(By.CssSelector("*[data-test=\"back-to-products\"]")).Text, Is.EqualTo("Back to products"));
    Assert.That(driver.FindElement(By.CssSelector(".inventory_details_name")).Text, Is.EqualTo("Sauce Labs Backpack"));
    driver.FindElement(By.CssSelector("*[data-test=\"add-to-cart-sauce-labs-backpack\"]")).Click();
    Assert.That(driver.FindElement(By.LinkText("1")).Text, Is.EqualTo("1"));
    driver.FindElement(By.LinkText("1")).Click();
    Assert.That(driver.FindElement(By.CssSelector(".title")).Text, Is.EqualTo("Your Cart"));
    Assert.That(driver.FindElement(By.CssSelector(".inventory_item_name")).Text, Is.EqualTo("Sauce Labs Backpack"));
    Assert.That(driver.FindElement(By.CssSelector(".inventory_item_price")).Text, Is.EqualTo("$29.99"));
    driver.FindElement(By.CssSelector("*[data-test=\"remove-sauce-labs-backpack\"]")).Click();
    driver.Close();
  }
}